name: Docker Build and Push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Read the current version
      id: read_version
      run: echo "::set-output name=version::$(cat ./version.md)"
      
    - name: Increment the version
      id: increment_version
      run: |
        # Increment the version and save it as an output
        CURRENT_VERSION=${{ steps.read_version.outputs.version }}
        NEW_VERSION=$((CURRENT_VERSION + 1))
        echo "::set-output name=version::$NEW_VERSION"

    - name: Update the version.txt with the new version
      uses: wow-actions/update-file@v1.2.0
      with:
        # Your GitHub token for authentication.
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        # File path to update
        path: version.md
        # Content to update the file
        content: "${{ env.VERSION }}"
        # Commit message when update the file
        commit_message: "update: version.txt with new version"
        # Opening comment
        opening_comment: "<!-- [START AUTO UPDATE] -->"
        # Closing comment
        closing_comment: "<!-- [END AUTO UPDATE] -->"
        # Warning comment
        warning_comment: "<!-- Please keep comment here to allow auto-update -->"

    - name: Set environment variable for the version
      run: |
        echo "VERSION=${{ steps.increment_version.outputs.version }}" >> $GITHUB_ENV
        echo "DOCKER_IMAGE_NAME=dotnet-rest" >> $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.VERSION }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          
