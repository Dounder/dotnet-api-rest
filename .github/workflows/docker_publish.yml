on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Set environment variable for the version
      run: |
        echo "DOCKER_IMAGE_NAME=dotnet-rest" >> $GITHUB_ENV
        echo "BUMP=none" >> $GITHUB_ENV

    - name: Determine the bump level
      id: bump-level
      run: |
        commit_message=$(git log --format=%B -n 1 $GITHUB_SHA)
        if [[ $commit_message == *"change:"* ]]; then
          echo "BUMP=major" >> $GITHUB_ENV
        elif [[ $commit_message == *"feat:"* ]]; then
          echo "BUMP=minor" >> $GITHUB_ENV
        elif [[ $commit_message == *"fix:"* ]]; then
          echo "BUMP=patch" >> $GITHUB_ENV
        else
          echo "BUMP=none" >> $GITHUB_ENV
        fi
        
      if: ${{ env.BUMP }} != 'none'
      
    - name: Determine the new version
      id: version
      uses: PaulHatch/semantic-version@v5.3.0
      with:
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "change:"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "feat:"
        # A string to determine the format of the version output
        version_format: "${major}.${minor}.${patch}"
        # Named version, will be used as suffix for name version tag
        namespace: ${{ env.DOCKER_IMAGE_NAME }}
        # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
        search_commit_body: true
        # The output method used to generate list of users, 'csv' or 'json'.
        user_format_type: "csv"

    - name: Login to Docker Hub
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5.0.0
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.version.outputs.version }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
